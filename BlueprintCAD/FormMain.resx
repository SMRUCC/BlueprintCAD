<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolStripStatusLabel1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>